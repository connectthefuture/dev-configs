# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'*.sql':
	'Drop Stored Procedure (SPROC)':
		'prefix':'sqldropsproc'
		'description':'Standard command to drop a stored procedure (If exists)'
		'body':'DROP PROCEDURE IF EXISTS `$1`;'
	'Create Database':
		'prefix':'sqlcreatedb'
		'description':'Initialize a new DB with standard UTF8 encoding'
		'body':'CREATE DATABASE IF NOT EXISTS `${1:databaseName}` DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_unicode_ci'
	'Create Table':
		'prefix' : 'sqltbl'
		'description':'Creates a standard SQL table with date properties and status reference'
		'descriptionMoreUrl':'https://github.com/frontalnugity/atom-configs'
		'body' : """
				-- --------------------------------------------
				-- Table definition for ${1:tableName}
				DROP TABLE IF EXISTS `$1`;
				CREATE TABLE `$1` (
				  `${2:idx}ID` int(11) NOT NULL AUTO_INCREMENT,
				  `$2Name` varchar(255) DEFAULT NULL,
					`$2StatusID` int (11) DEFAULT 1,
					`$2DateCreated` datetime DEFAULT NOT NULL,
					`$2DateModified` datetime DEFAULT NOT NULL,
					PRIMARY KEY (`$2`),
					KEY `$2StatusID` (`$2StatusID`),
					CONSTRAINT `fk_$2_status` FOREIGN KEY (`$2StatusID`) REFERENCES `cmn_status` (`statusID`) ON DELETE NO ACTION ON UPDATE NO ACTION
				) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='${3:comment}';
				CREATE TRIGGER `trig_$1_insert` BEFORE UPDATE ON `$1` FOR EACH ROW SET NEW.$2DateCreated = IFNULL(NEW.$2DateCreated, NOW()), NEW.$2DateModified = IFNULL(NEW.$2DateModified, NOW());
				CREATE TRIGGER `trig_$1_update` BEFORE INSERT ON `$1` FOR EACH ROW SET NEW.$2DateModified = NOW();
		"""
	'Create SQL Stored Procedure (SELECT)':
		'prefix':'sqlsproc_select'
		'description':'Standard definition for typical SELECT SPROCS (Stored Procedures)'
		'descriptionMoreUrl':'https://github.com/frontalnugity/atom-configs'
		'body':"""
			-- ----------------------------
			--  Stored Procedure defintion for for `${1:object}_${2:select}`
			DROP PROCEDURE IF EXISTS `$1_$2`;
			delimiter ;;
			CREATE PROCEDURE `$1_$2`
			(IN pID int)
			BEGIN
				if (pID > 0) then
					SELECT * FROM vw_${3:table} WHERE ${4:key}ID = pID;
				else
					SELECT * FROM vw_${3:table} ORDER BY $4SortOrder ASC, $4Name ASC;
				end if;
			END;
		 	;;
			delimiter ;
		"""
	'Create SQL Stored Procedure (DELETE)':
		'prefix':'sqlsproc_delete'
		'description':'Standard definition for typical DELETE SPROC (Stored Procedures)'
		'descriptionMoreUrl':'https://github.com/frontalnugity/atom-configs'
		'body':"""
			-- ----------------------------
			--  Stored Procedure defintion for for `${1:object}_${2:delete}`
			DROP PROCEDURE IF EXISTS `$1_${2:delete}`;
			delimiter ;;
			CREATE PROCEDURE `$1_${2:delete}`
			(IN pID int)
			BEGIN
				DELETE FROM ${3:table} WHERE ${4:key}ID = pID;
			END;
		 	;;
			delimiter ;
		"""
	'Create SQL Stored Procedure (UPDATE)':
		'prefix':'sqlsproc_update'
		'description':'Standard definition for typical UPDATE SPROC (Stored Procedures)'
		'descriptionMoreUrl':'https://github.com/frontalnugity/atom-configs'
		'body':"""
			-- ----------------------------
			--  Stored Procedure defintion for for `${1:object}_${2:update}`
			DROP PROCEDURE IF EXISTS `$1_${2:update}`;
			delimiter ;;
			CREATE PROCEDURE `$1_${2:update}`
			(IN pID int $5)
			BEGIN
				UPDATE ${3:table} SET
					$6
				WHERE ${4:key}ID = pID;
			END;
		 	;;
			delimiter ;
		"""
	'Create SQL Stored Procedure (INSERT)':
		'prefix':'sqlsproc_update'
		'description':'Standard definition for typical UPDATE SPROC (Stored Procedures)'
		'descriptionMoreUrl':'https://github.com/frontalnugity/atom-configs'
		'body':"""
			-- ----------------------------
			--  Stored Procedure defintion for for `${1:object}_${2:insert}`
			DROP PROCEDURE IF EXISTS `$1_${2:insert}`;
			delimiter ;;
			CREATE PROCEDURE `$1_${2:insert}`
			(IN pID int $5)
			BEGIN
				INSERT INTO ${3:table}
				($4)
				values
				($5);
				SELECT LAST_INSERT_ID();
			END;
			;;
			delimiter ;
		"""
	'Create SQL Stored Procedure (IUDS)':
		'prefix':'sqlsproc_all'
		'description':'Standard IUDS set of stored procedures'
		'body':"""
				-- check for pre-existing sprocs, delete if found
				DROP PROCEDURE IF EXISTS `${1:object}_insert`;
				DROP PROCEDURE IF EXISTS `$1_update`;
				DROP PROCEDURE IF EXISTS `$1_delete`;
				DROP PROCEDURE IF EXISTS `$1_select`;

				delimiter ;;
				CREATE PROCEDURE `$1_insert` (${3:parameters})
				BEGIN
					INSERT INTO ${2:table}
					(${4:columns})
					VALUES
					(${5:values});
					SELECT LAST_INSERT_ID();
				END;
				;;

				CREATE PROCEDURE `$1_update`
				(IN pID int, $3)
				BEGIN
					UPDATE $2 SET
						${6:updateProperties}
					WHERE ${4:ID} = pID;
				END;
				;;

				CREATE PROCEDURE `$1_delete`
				(IN pID int)
				BEGIN
					DELETE FROM $2 WHERE $4 = pID;
				END;
				;;

				CREATE PROCEDURE `$1_select`
				(IN pID int)
				BEGIN
					IF (pID > 0) THEN
						SELECT * FROM vw_$2 WHERE $4=pID;
					ELSE
						SELECT * FROM vw_$2;
					END IF;
				END;
				;;

				delimiter ;
		"""
